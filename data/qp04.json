{
  "title": "MongoDB and Version Control",
  "date": "30th January 2025",
    "mcqs": [
      {
        "id": 1,
        "question": "You are testing a POST request in Postman. Where would you add the JSON payload for the request:",
        "code": null,
        "options": {
          "a": "Params tab",
          "b": "Body tab",
          "c": "Headers tab",
          "d": "Pre-request Script tab"
        }
      },
      {
        "id": 2,
        "question": "Which of the following is an invalid JSON payload for a POST request to create a user?",
        "code": null,
        "options": {
          "a": "{\"name\": \"John\", \"age\": 30}",
          "b": "{name: \"John\", age: 30}",
          "c": "{\"name\": \"John\", \"age\": \"30\"}",
          "d": "Both a and c"
        }
      },
      {
        "id": 3,
        "question": "What is the difference between PUT and PATCH methods?",
        "code": null,
        "options": {
          "a": "PUT updates the entire resource, while PATCH updates only specific fields",
          "b": "PUT is used for creating resources, while PATCH is used for updating",
          "c": "PUT is idempotent, while PATCH is not",
          "d": "Both a and c"
        }
      },
      {
        "id": 4,
        "question": "Which HTTP status code indicates a successful creation of a resource?",
        "code": null,
        "options": {
          "a": "200",
          "b": "201",
          "c": "204",
          "d": "400"
        }
      },
      {
        "id": 5,
        "question": "Which of the following is a valid HTTP status code for a redirect?",
        "code": null,
        "options": {
          "a": "200",
          "b": "301",
          "c": "304",
          "d": "503"
        }
      },
      {
        "id": 6,
        "question": "How do you handle errors in Express.js?",
        "code": null,
        "options": {
          "a": "Using app.error()",
          "b": "Using a middleware with four arguments: (err, req, res, next)",
          "c": "Using try-catch blocks in every route",
          "d": "Errors cannot be handled in Express.js"
        }
      },
      {
        "id": 7,
        "question": "How can you improve the performance of an Express.js application?",
        "code": null,
        "options": {
          "a": "Use clustering to leverage multiple CPU cores",
          "b": "Use synchronous code everywhere",
          "c": "Avoid using middleware",
          "d": "Use a single route for all requests"
        }
      },
      {
        "id": 8,
        "question": "What is the purpose of the next() function in Express.js middleware?",
        "code": null,
        "options": {
          "a": "To end the request-response cycle",
          "b": "To pass control to the next middleware function",
          "c": "To skip to the last middleware",
          "d": "To restart the middleware chain"
        }
      },
      {
        "id": 9,
        "question": "What's the purpose of the app.all() method in Express.js?",
        "code": null,
        "options": {
          "a": "Handles all routes",
          "b": "Handles all HTTP methods for a path",
          "c": "Middleware for all routes",
          "d": "Error handler for all routes"
        }
      },
      {
        "id": 10,
        "question": "What happens when you call res.json() and res.send() multiple times in the same request handler?",
        "code": null,
        "options": {
          "a": "Both responses are sent",
          "b": "Error is thrown",
          "c": "Only the first response is sent",
          "d": "Only the last response is sent"
        }
      }
    ],
    "shortQuestions": [
      {
        "id": 1,
        "question": "What is rate limiting in APIs? Why is it important?"
      },
      {
        "id": 2,
        "question": "Explain the purpose of environment variables in Postman. Provide an example of their usage"
      },
      {
        "id": 3,
        "question": "What are query parameters and path parameters in APIs? Provide an example of each"
      },
      {
        "id": 4,
        "question": "Write a middleware function to log the request method, timestamp and URL for every incoming request"
      },
      {
        "id": 5,
        "question": "Write an Express.js route for /greet/:language that returns { \"greeting\": \"Namaste\" } for Hindi, { \"greeting\": \"Kem cho\" } for Gujarati, and defaults to { \"greeting\": \"Hello\" } for unsupported languages"
      },
      {
        "id": 6,
        "question": "What is the MVC pattern in Express.js? Explain with a simple example"
      },
      {
        "id": 7,
        "question": "Write an Express.js route for /records that uses the type query parameter to redirect to https://www.google.com for type=google, https://www.github.com for type=github, and defaults to https://www.example.com for any other type or if type is missing"
      }
    ],
    "longQuestions": [
      {
        "id": 1,
        "question": "You are building a food delivery app called FoodieFast. Create an Express.js application that:",
        "subparts": [
          "Connects to MongoDB using Mongoose.",
          "Has a model called Restaurant using a schema for the collection restaurants.",
          "Handles GET requests at /api/v1/restaurants to return a list of all restaurants.",
          "Handles POST requests at /api/v1/addRestaurant to add a new restaurant after validating the request body.",
          "Handles DELETE requests at /api/v1/deleteRestaurant/:id to delete a restaurant by its _id"
        ]
      },
      {
        "id": 2,
        "question": "You are testing an online banking API for the endpoint /transactions. It expects the following body parameters: transactionId (string): A unique identifier for the transaction which starts with \"TXN\" followed by 8 random digits.       Example: \"TXN12345678\" amount (number): Amount of the transaction. It should be a random number between 0 and 1,000,000. transactionType (string): Type of transaction. It can be: \"Deposit\" or \"Withdrawal\"  or \"Transfer” Write a Postman pre-request script to generate random values for the above parameters",
        "subparts": []
      },
      {
        "id": 3,
        "question": "Create an Aadhar picture upload service:",
        "subparts": [
          "Use multer middleware for handling file uploads",
          "Allow only image files (jpg, png)",
          "Limit file size to 1MB",
          "Save file with unique name",
          "Return file URL in response"
        ]
      },
      {
        "id": 4,
        "question": "You are building a Newsletter System using a template engine.",
        "subparts": [
          "Set up Handlebars as the template engine.",
          "Create a newsletter template (newsletter.hbs) with dynamic content (e.g., title, body).",
          "Add a route /newsletter to render the newsletter preview.",
          "Pass dynamic data (e.g., title: \"Monthly Update\", body: \"Stay tuned for exciting news!\") to the template.",
          "Use partials for the header (header.hbs) and footer (footer.hbs) in the newsletter template"
        ]
      }
    ]
  }